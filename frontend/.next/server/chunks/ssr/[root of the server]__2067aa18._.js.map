{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/components/Navbar.tsx"],"sourcesContent":["import { FC } from \"react\";\r\n\r\nconst Navbar: FC = () => {\r\n  return (\r\n    <header className=\"bg-black text-white h-32 flex items-center justify-center\">\r\n    <h1 className=\"text-4xl font-extrabold text-center flex items-center space-x-2\">\r\n        <span className=\"text-blue-500\">ðŸš€</span>{\" \"}\r\n        <span className=\"text-[#4EA8DE]\">Todo</span>{\" \"}\r\n        <span className=\"text-[#5E60CE]\">App</span>\r\n      </h1>      \r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"names":[],"mappings":";;;;;AAEA,MAAM,SAAa;IACjB,qBACE,qKAAC;QAAO,WAAU;kBAClB,cAAA,qKAAC;YAAG,WAAU;;8BACV,qKAAC;oBAAK,WAAU;8BAAgB;;;;;;gBAAU;8BAC1C,qKAAC;oBAAK,WAAU;8BAAiB;;;;;;gBAAY;8BAC7C,qKAAC;oBAAK,WAAU;8BAAiB;;;;;;;;;;;;;;;;;AAIzC;uCAEe","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/createtaskpage.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { PlusCircle, ArrowLeft  } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\nimport Navbar from \"@/components/Navbar\";\r\n\r\n\r\ninterface Todo {\r\n  id: number;\r\n  title: string;\r\n  color: string;\r\n  completed: boolean;\r\n}\r\n\r\nconst CreateTaskPage = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [selectedColor, setSelectedColor] = useState(\"#4F46E5\");\r\n\r\n  const router = useRouter();\r\n\r\n  const presetColors = [\r\n    \"#FF3B30\", \"#F79000\", \"#FFCC00\", // Red, Orange, Yellow\r\n    \"#34C759\", \"#007AFF\", \"#5856D6\", // Green, Blue\r\n    \"#AF52DE\", \"#FF2D55\", \"#A2845E\", // Cyan, Yellow, Violet\r\n  ];\r\n\r\n  // Fetch existing todos on mount\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:4000/tasks\")\r\n      .then((res) => setTodos(res.data))\r\n      .catch((err) => console.error(\"Error fetching todos:\", err));\r\n  }, []);\r\n\r\n  // Handles form submission using Axios\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(\"http://localhost:4000/tasks\", {\r\n        title: newTodo,\r\n        color: selectedColor,\r\n        completed: false\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        console.log(\"Task created successfully\");\r\n        setTodos((prevTodos) => [...prevTodos, response.data]); // Update state with new task\r\n        setNewTodo(\"\");\r\n        setSelectedColor(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating task:\", error);\r\n    }\r\n  };\r\n\r\n  // Adds a new Todo using Axios\r\n  const addTodo = async () => {\r\n    if (!newTodo.trim()) return;\r\n    try {\r\n      const res = await axios.post(\"http://localhost:4000/tasks\", {\r\n        title: newTodo,\r\n        color: selectedColor,\r\n        completed: false,\r\n      });\r\n\r\n      setTodos((prevTodos) => [...prevTodos, res.data]);\r\n      setNewTodo(\"\");\r\n      setSelectedColor(\"#4F46E5\");\r\n      alert(\"Task created successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error deleting todo:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      {/* Back Button */}\r\n      <div className=\"flex flex-col bg-[#1A1A1A] text-white px-40 py-2\">\r\n\r\n      <button\r\n        className=\"text-sm text-white underline mt-4 bg-transparent cursor-pointer\"\r\n        onClick={() => router.push(\"/\")}\r\n      >\r\n        <ArrowLeft />\r\n      </button>\r\n      </div>\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-col items-center min-h-screen bg-[#1A1A1A] text-white px-6 py-10\">\r\n        {/* Create Task Form */}\r\n        <div className=\"mt-6 w-full max-w-md\">\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block font-semibold text-[#4EA8DE]\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={newTodo}\r\n                placeholder=\"Ex: Brush your teeth\"\r\n                onChange={(e) => setNewTodo(e.target.value)}\r\n                className=\"w-full mb-10 mt-2 px-3 py-2 rounded text-white bg-[#262626]\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* Color Selector */}\r\n            <label className=\"block font-semibold text-[#4EA8DE]\">Color</label>\r\n            <div className=\"flex space-x-2\">\r\n              {presetColors.map((color) => (\r\n                <button\r\n                  key={color}\r\n                  type=\"button\"\r\n                  className={`w-10 h-10 mb-5 rounded-full border-2 transition-all duration-200 ${\r\n                    selectedColor === color ? \"border-white scale-110\" : \"border-transparent\"\r\n                  }`}\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => setSelectedColor(color)}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <button\r\n              className=\"w-full bg-[#1E6F9F] px-6 py-3 rounded-lg mt-6 flex items-center justify-center space-x-2 text-white hover:bg-blue-700 transition cursor-pointer\"\r\n              onClick={addTodo}\r\n            >\r\n              <span>Add Task</span> <PlusCircle size={20} />\r\n            </button>\r\n          </form>\r\n        </div>       \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTaskPage;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}