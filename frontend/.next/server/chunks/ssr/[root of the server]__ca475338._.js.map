{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/createtaskpage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { CheckCircle, Trash, PlusCircle } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\ninterface Todo {\r\n  id: number;\r\n  title: string;\r\n  color: string;\r\n  completed: boolean;\r\n}\r\n\r\nconst CreateTaskPage = () => {\r\n  const [todos, setTodos] = useState<Todo[]>([]);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n  const [selectedColor, setSelectedColor] = useState(\"#4F46E5\");\r\n\r\n  const [taskName, setTaskName] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n\r\n  const presetColors = [\r\n    \"#FF3B30\", \"#F79000\", \"#FFCC00\", // Red, Orange, Yellow\r\n    \"#34C759\", \"#007AFF\", \"#5856D6\", // Green, Blue\r\n    \"#AF52DE\", \"#FF2D55\", \"#A2845E\", // Cyan, Yellow, Violet\r\n  ];\r\n\r\n  // Handles form submission\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(\"/api/tasks\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ taskName, description }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        console.log(\"Task created successfully\");\r\n        setTaskName(\"\");\r\n        setDescription(\"\");\r\n      } else {\r\n        console.error(\"Failed to create task\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  // Adds a new Todo\r\n  const addTodo = async () => {\r\n    if (!newTodo.trim()) return;\r\n    try {\r\n      const res = await axios.post(\"http://localhost:4000/tasks\", {\r\n        title: newTodo,\r\n        color: selectedColor,\r\n        completed: false,\r\n      });\r\n      setTodos([...todos, res.data]);\r\n      setNewTodo(\"\");\r\n      setSelectedColor(\"#4F46E5\");\r\n    } catch (error) {\r\n      console.error(\"Error adding todo:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Header */}\r\n      <header className=\"bg-black text-white h-32 flex items-center justify-center\">\r\n      <h1 className=\"text-4xl font-extrabold text-center flex items-center space-x-2\">\r\n          <span className=\"text-blue-500\">ðŸš€</span>{\" \"}\r\n          <span className=\"text-[#4EA8DE]\">Todo</span>{\" \"}\r\n          <span className=\"text-[#5E60CE]\">App</span>\r\n        </h1>      \r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-col items-center min-h-screen bg-[#1A1A1A] text-white px-6 py-10\">\r\n        {/* <h1 className=\"text-4xl font-extrabold text-center flex items-center space-x-2\">\r\n          <span className=\"text-blue-500\">ðŸš€</span>{\" \"}\r\n          <span className=\"text-[#4EA8DE]\">Todo</span>{\" \"}\r\n          <span className=\"text-[#5E60CE]\">App</span>\r\n        </h1> */}\r\n\r\n        {/* Back Button */}\r\n        <button\r\n          className=\"text-sm text-blue-400 underline mt-4 text-left\"\r\n          onClick={() => router.push(\"/\")} // Update with the correct route\r\n          >\r\n          Back\r\n        </button>\r\n\r\n        {/* Create Task Form */}\r\n        <div className=\"mt-6 w-full max-w-md\">\r\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n            <div>\r\n              <label className=\"block font-semibold text-[#4EA8DE]\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                value={taskName}\r\n                placeholder=\"Ex: Brush your teeth\"\r\n                onChange={(e) => setTaskName(e.target.value)}\r\n                className=\"w-full mb-10 mt-2 px-3 py-2 rounded text-[#787878] bg-[#262626]\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* Color Selector */}\r\n            <label className=\"block font-semibold text-[#4EA8DE]\">Color</label>\r\n            <div className=\"flex space-x-2\">\r\n              {presetColors.map((color) => (\r\n                <button\r\n                  key={color}\r\n                  type=\"button\" // Prevents form submission on click\r\n                  className={`w-10 h-10 mb-5 rounded-full border-2 transition-all duration-200 ${\r\n                    selectedColor === color ? \"border-white scale-110\" : \"border-transparent\"\r\n                  }`}\r\n                  style={{ backgroundColor: color }}\r\n                  onClick={() => setSelectedColor(color)}\r\n                />\r\n              ))}\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"w-full bg-blue-600 px-6 py-3 rounded-lg text-white hover:bg-blue-700 transition\"\r\n            >\r\n              Add Task\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        {/* Todo List */}\r\n        <div className=\"mt-8 w-full max-w-2xl\">\r\n          <ul className=\"space-y-3\">\r\n            {todos.map((todo) => (\r\n              <li\r\n                key={todo.id}\r\n                className=\"flex items-center justify-between px-4 py-2 bg-gray-800 rounded\"\r\n              >\r\n                <span>{todo.title}</span>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <CheckCircle className=\"text-green-500 cursor-pointer\" />\r\n                  <Trash className=\"text-red-500 cursor-pointer\" />\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateTaskPage;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}