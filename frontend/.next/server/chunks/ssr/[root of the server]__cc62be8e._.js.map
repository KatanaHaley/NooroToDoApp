{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body className=\"antialiased\">\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;gBAAK,WAAU;;kCACd,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/katan/Desktop/FINAL_todoapp/todo_app/frontend/src/pages/index.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  color: string;\n}\n\nexport default function Home() {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [selectedColor, setSelectedColor] = useState(\"#000000\");\n\n  // Fetch Todos on Component Mount\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/tasks\")\n      .then((res) => setTodos(res.data))\n      .catch((err) => console.error(\"Error fetching todos:\", err));\n  }, []);\n\n  // Add a New Todo\n  const addTodo = async () => {\n    if (!newTodo.trim()) return;\n\n    try {\n      const res = await axios.post(\"http://localhost:4000/tasks\", { \n        title: newTodo, \n        color: selectedColor, \n        completed: false \n      });\n\n      setTodos((prevTodos) => [...prevTodos, res.data]);\n      setNewTodo(\"\");\n      setSelectedColor(\"#000000\"); // Reset color\n    } catch (error) {\n      console.error(\"Error adding todo:\", error);\n    }\n  };\n\n  // Toggle Todo Completion\n  const toggleTodo = async (id: number, completed: boolean) => {\n    try {\n      const res = await axios.put(`http://localhost:4000/tasks/${id}`, { completed });\n      setTodos((prevTodos) => \n        prevTodos.map((todo) => (todo.id === id ? res.data : todo))\n      );\n    } catch (error) {\n      console.error(\"Error updating todo:\", error);\n    }\n  };\n\n  // Update Todo Title & Color\n  const updateTodo = async (id: number, title: string, color: string) => {\n    try {\n      const res = await axios.put(`http://localhost:4000/tasks/${id}`, { title, color });\n      setTodos((prevTodos) => \n        prevTodos.map((todo) => (todo.id === id ? res.data : todo))\n      );\n    } catch (error) {\n      console.error(\"Error updating todo:\", error);\n    }\n  };\n\n  // Delete Todo\n  const deleteTodo = async (id: number) => {\n    try {\n      await axios.delete(`http://localhost:4000/tasks/${id}`);\n      setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting todo:\", error);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center min-h-screen bg-black text-white p-10\">\n      <h1 className=\"text-3xl font-bold mb-5\">To-Do App</h1>\n\n      {/* Input & Add Button */}\n      <div className=\"flex space-x-2\">\n        <input \n          type=\"text\" \n          value={newTodo} \n          onChange={(e) => setNewTodo(e.target.value)} \n          placeholder=\"Enter a task\" \n          className=\"px-3 py-2 text-white rounded border-gray-100\"\n        />\n        <input \n          type=\"color\" \n          value={selectedColor} \n          onChange={(e) => setSelectedColor(e.target.value)} \n          className=\"w-10 h-10\"\n        />\n        <button className=\"bg-blue-600 px-4 py-2 rounded hover:bg-blue-700\" onClick={addTodo}>\n          +\n        </button>\n      </div>\n\n      {/* Task List */}\n      <ul className=\"mt-5 w-full max-w-md\">\n        {todos.map((todo) => (\n          <li \n            key={todo.id} \n            className=\"flex justify-between items-center p-3 my-2 rounded shadow-lg\"\n            style={{ backgroundColor: todo.color }} // Apply color from DB\n          >\n            {/* Checkbox + Editable Title */}\n            <div className=\"flex items-center space-x-3\">\n              <input \n                type=\"checkbox\" \n                checked={todo.completed}\n                onChange={() => toggleTodo(todo.id, !todo.completed)}\n                className=\"w-5 h-5 cursor-pointer\"\n              />\n              \n              {/* Editable Task Title */}\n              <input \n                type=\"text\" \n                value={todo.title}\n                onChange={(e) => updateTodo(todo.id, e.target.value, todo.color)}\n                className={`bg-transparent text-lg outline-none w-full ${todo.completed ? \"line-through text-gray-400\" : \"text-white\"}`}\n              />\n            </div>\n\n            {/* Change Color & Delete */}\n            <div className=\"flex items-center space-x-2\">\n              <input \n                type=\"color\" \n                value={todo.color} \n                onChange={(e) => updateTodo(todo.id, todo.title, e.target.value)}\n                className=\"w-6 h-6 cursor-pointer\"\n              />\n              <button className=\"bg-red-500 px-2 py-1 rounded hover:bg-red-700\" onClick={() => deleteTodo(todo.id)}>\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}